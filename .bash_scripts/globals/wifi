#!/bin/bash

readonly NETWORKS="/etc/network/.networks"
readonly INTERFACES="/etc/network/interfaces"

insert_content() {
    local new_content="$1"
    local file="$2"

    if [ ! -e "$file" ]; then
        sudo touch "$file"
    fi

    temp_file=$(mktemp)
    echo -e "$new_content" >"$temp_file"
    cat "$file" >>"$temp_file"
    sudo mv "$temp_file" "$file"
    sudo chown root:root "$file"
    sudo chmod 666 "$file"
}

add_network() {
    local new_network="wpa-ssid $ssid\nwpa-psk  $psk\ndate     $(date)\n"
    insert_content "$new_network" "$NETWORKS"
}

ask_psk() {
    read -sp "Enter the password for $ssid: " psk
    if [ -z "$psk" ]; then
        echo "It could not be empty."
        exit 1
    fi
}

create_interfaces() {
    # TODO: use wifiinterface alias
    local wifiinterface=$(nmcli device status | grep wifi | cut -d" " -f1)
    sudo touch "$INTERFACES"
    sudo mv "$INTERFACES" "$INTERFACES.bak"
    insert_content "
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

allow-hotplug $wifiinterface
iface $wifiinterface inet dhcp
	wpa-ssid name
	wpa-psk  pass
" "$INTERFACES"
    sudo chmod 666 "$INTERFACES"

}

_wifion() {
    sudo kill -9 $(pgrep wpa_supplicant) || true
    sudo ifdown $(iw dev | grep -i interface | xargs | cut -d " " -f2)
    sudo ifup $(iw dev | grep -i interface | xargs | cut -d " " -f2)
    source ~/.bash_scripts/globals/refreshdbar
}

update_interfaces() {
    sudo sed -i "s/wpa-ssid .*/wpa-ssid $ssid/" "$INTERFACES"
    sudo sed -i "s/wpa-psk .*/wpa-psk  $psk/" "$INTERFACES"
    _wifion
}

last_action() {
    clear
    local wifi_response=$(ping -c 1 -s 1 www.debian.org | grep received | cut -d" " -f4)

    if [[ "$wifi_response" == "1" ]]; then
        local ssid=$(iw dev | grep ssid | xargs | sed "s/ssid //")
        local ip=$(nmcli device show | grep IP4.ADDRESS | awk 'NR==2 {print $2}')
        echo -e "\n========================"
        echo "Connected to $ssid"
        echo "Status: Ok"
        echo "IP4: $ip"
        echo -e "========================\n"
    else
        echo "Internet does not working"
    fi
}

main() {

    sudo echo -e "\nScanning WiFi networks...\n"

    sudo rfkill unblock wlan
    sleep 1
    sudo ip link set wlo1 up
    sleep 2
    create_interfaces
    sleep 1

    networks=$(sudo iwlist wlo1 scan | grep SSID | cut -d: -f2 | tr -d ' "' | sed '/^$/d' | sort | uniq)
    if [ -z "$networks" ]; then
        echo "No WiFi networks found."
        exit 1
    fi

    echo -e "Available WiFi networks:\n"
    echo -e "$networks\n" | nl

    read -p "Select a network (number): " choice
    ssid=$(echo "$networks" | sed -n "$((choice + 0))p")
    if [ -z "$ssid" ]; then
        echo "Invalid selection."
        exit 1
    fi

    result=$(grep -m1 -A1 "^wpa-ssid $ssid$" "$NETWORKS" | tr -d '\t')
    if [ -z "$result" ]; then
        ask_psk
        add_network
        update_interfaces
        last_action
        exit 0
    fi

    saved_psk=$(grep -m1 -A1 "^wpa-ssid $ssid$" "$NETWORKS" | grep wpa-psk | sed 's/wpa-psk  //g' | tr -d '\t')
    echo -e "\nYou have selected: $ssid"
    echo -e "The last password used was $saved_psk\n"
    read -p "Do you want change the password ? (y/n): [n] " same_psk

    if [[ "$same_psk" == "y" || "$same_psk" == "Y" ]]; then
        ask_psk
        add_network
        update_interfaces
    else
        echo "ok"
        psk=$saved_psk
        update_interfaces
    fi

    last_action
    exit 0
}

main
