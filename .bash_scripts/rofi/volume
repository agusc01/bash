#!/bin/bash

option_1=' '
option_2=''
option_3=''
option_4=''
option_5='0%'
option_6='10%'
option_7='20%'
option_8='30%'
option_9='40%'
option_10='50%'
option_11='60%'
option_12='70%'
option_13='80%'
option_14='90%'
option_15='100%'
last_selection=0

run_rofi() {
    local get_volume=$(pulsemixer --get-volume | cut -d' ' -f1)
    local get_mute=$(pulsemixer --get-mute | sed s/0/Unmute/ | sed s/1/Mute/)
    local options=$(echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_15\n$option_12\n$option_9\n$option_6\n$option_14\n$option_11\n$option_8\n$option_5\n$option_13\n$option_10\n$option_7")
    echo -e "$options" | rofi -dmenu \
        -mesg "Volume : $(echo "$get_volume%") $(echo "| status: $get_mute")" \
        -kb-cancel Escape,Control+c \
        -kb-row-up "Alt+k" \
        -kb-row-down "Alt+j" \
        -kb-row-left "Alt+h" \
        -kb-row-right "Alt+l" \
        -selected-row "$last_selection" \
        -theme "~/.bash_scripts/rasi/volume.rasi"
}

while true; do
    option=$(run_rofi)
    # Check if the option is empty (Rofi closed without selection)
    if [ -z "$option" ]; then
        break
    fi

    case $option in
    $option_1)
        eval 'fish -c "smute notify"'
        last_selection=0
        ;;
    $option_2)
        eval 'fish -c "sunmute notify"'
        last_selection=1
        ;;
    $option_3)
        eval 'fish -c "s0 notify"'
        last_selection=2
        ;;
    $option_4)
        eval 'fish -c "s1 notify"'
        last_selection=3
        ;;
    $option_5)
        eval 'fish -c "setsound 0 notify"'
        break
        ;;
    $option_6)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 10 notify"'
        break
        ;;
    $option_7)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 20 notify"'
        break
        ;;
    $option_8)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 30 notify"'
        break
        ;;
    $option_9)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 40 notify"'
        break
        ;;
    $option_10)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 50 notify"'
        break
        ;;
    $option_11)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 60 notify"'
        break
        ;;
    $option_12)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 70 notify"'
        break
        ;;
    $option_13)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 80 notify"'
        break
        ;;
    $option_14)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 90 notify"'
        break
        ;;
    $option_15)
        eval 'fish -c "sunmute"'
        eval 'fish -c "setsound 100 notify"'
        break
        ;;
    esac
done
